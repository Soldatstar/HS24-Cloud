
volumes:
    prometheus_data_v2: {}
    grafana_data_v2: {}

networks:
  front-tier:
  back-tier:
    driver: bridge
    ipam:
       config:
          - subnet: 172.16.238.0/24

services:

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/:ro
      - prometheus_data_v2:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=60d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - back-tier
    restart: always
    cpuset: "0"          # Beschränkt Nginx auf Core 0

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    cpuset: "0"          # Beschränkt Nginx auf Core 0

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    cpuset: "0"          # Beschränkt Nginx auf Core 0

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data_v2:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always
    cpuset: "0"          # Beschränkt Nginx auf Core 0


  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - /home/debian/nginx.conf:/etc/nginx/nginx.conf
    deploy:
      resources:
        limits:
          cpus: "2"        # Maximal 2 CPUs
          memory: "2g"     # Maximal 2 GB RAM
    cpuset: "0"          # Beschränkt Nginx auf Core 0

  quarkus-native:
    container_name: quarkus-native
    image: cr.gitlab.fhnw.ch/ip5-24vt/fileimporter/quarkus_native:quarkus-native-image-simplified
    environment:
      - API_URL=http://nginx:80
      - FILE_IMPORTER_ENABLED=true
      - FILE_IMPORTER_LOCATION_TYPE=URI
      - FILE_IMPORTER_IMPORT_LOCATION=/import
      - FILE_IMPORTER_DONE_LOCATION=/done
      - FILE_IMPORTER_WILDCARD=.+\.([Pp][Dd][Ff])\s*$
      - FILE_IMPORTER_CONFIG_NAME=testURIImporterConfig
      - FILE_IMPORTER_BATCH_SIZE=2000
      - FILE_IMPORTER_INTERVAL_SEC=30
      - FILE_IMPORTER_SLEEP_BEFORE_IMPORT=2
      - FILE_IMPORTER_SLEEP_TIME=10
      - FILE_IMPORTER_THREAD_COUNT=8
      - API_USERNAME=FHNW_SERVICE_MANAGER
      - API_PASSWORD=FezNNtMuauSxHGocPSF7
    volumes:
      - /home/debian/tmp/quarkus-native/import:/import
      - /home/debian/tmp/quarkus-native/done:/done
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1g"
    cpuset: "1"
    networks:
      - back-tier

  quarkus-jvm:
    container_name: quarkus-jvm
    user: "1000:1000"
    image: cr.gitlab.fhnw.ch/ip5-24vt/fileimporter/quarkus_jvm:quarkus-native-image-simplified
    environment:
      - API_URL=http://nginx:80
      - FILE_IMPORTER_ENABLED=true
      - FILE_IMPORTER_LOCATION_TYPE=URI
      - FILE_IMPORTER_IMPORT_LOCATION=/import
      - FILE_IMPORTER_DONE_LOCATION=/done
      - FILE_IMPORTER_WILDCARD=.+\.([Pp][Dd][Ff])\s*$
      - FILE_IMPORTER_CONFIG_NAME=testURIImporterConfig
      - FILE_IMPORTER_BATCH_SIZE=2000
      - FILE_IMPORTER_INTERVAL_SEC=30
      - FILE_IMPORTER_SLEEP_BEFORE_IMPORT=2
      - FILE_IMPORTER_SLEEP_TIME=10
      - FILE_IMPORTER_THREAD_COUNT=8
      - API_USERNAME=FHNW_SERVICE_MANAGER
      - API_PASSWORD=FezNNtMuauSxHGocPSF7
    volumes:
      - /home/debian/tmp/quarkus-jvm/import:/import
      - /home/debian/tmp/quarkus-jvm/done:/done
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1g"
    cpuset: "1"
    networks:
      - back-tier

  spring-native-simple:
    user: "1000:1000"
    container_name: spring-native-simple
    image: cr.gitlab.fhnw.ch/ip5-24vt/fileimporter/spring_native:spring-native-image-simplified
    volumes:
      - /home/debian/tmp/spring-native/import:/import
      - /home/debian/tmp/spring-native/done:/done
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1g"
    cpuset: "2"
    networks:
      - back-tier

  spring-jvm-simple:
    user: "1000:1000"
    container_name: spring-jvm-simple
    image: cr.gitlab.fhnw.ch/ip5-24vt/fileimporter/spring_jvm:spring-native-image-simplified
    volumes:
      - /home/debian/tmp/spring-jvm/import:/import
      - /home/debian/tmp/spring-jvm/done:/done
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1g"
    cpuset: "2"
    networks:
      - back-tier

  micronaut-jvm:
    user: "1000:1000"
    container_name: micronaut-jvm
    image: cr.gitlab.fhnw.ch/ip5-24vt/fileimporter/micronaut_jvm:micronaut-native-image-simplified
    volumes:
      - /home/debian/tmp/micronaut-jvm/import:/import
      - /home/debian/tmp/micronaut-jvm/done:/done
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1g"
    cpuset: "3"
    networks:
      - back-tier

  micronaut-native:
    user: "1000:1000"
    container_name: micronaut-native
    image: cr.gitlab.fhnw.ch/ip5-24vt/fileimporter/micronaut_native:micronaut-native-image-simplified
    volumes:
      - /home/debian/tmp/micronaut-native/import:/import
      - /home/debian/tmp/micronaut-native/done:/done
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1g"
    cpuset: "3"
    networks:
      - back-tier
