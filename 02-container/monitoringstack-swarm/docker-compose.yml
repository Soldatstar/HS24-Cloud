
volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  back-tier:
    driver: overlay  # Overlay network for Swarm

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=60d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"  # Expose Prometheus on port 9090
    networks:
      - back-tier
    deploy:
      replicas: 1  # Run only one instance
      placement:
        constraints:
          - node.role == manager  # Ensure it runs on a manager node
    restart: always

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - "9100:9100"  # Expose Node Exporter on port 9100
    networks:
      - back-tier
    deploy:
      mode: global  # Run on all nodes
    restart: always
    hostname: node-exporter  # Set dedicated hostname

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    ports:
      - "8080:8080"  # Expose cAdvisor on port 8080
    networks:
      - back-tier
    deploy:
      mode: global  # Run on all nodes
    restart: always
    hostname: cadvisor  # Set dedicated hostname

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"  # Expose Grafana on port 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
    networks:
      - back-tier
    deploy:
      replicas: 1  # Run only one instance
      placement:
        constraints:
          - node.role == manager  # Ensure it runs on a manager node
    restart: always
